# generated by datamodel-codegen:
#   filename:  SiennaInvestSchema.json
#   timestamp: 2024-05-31T00:34:06+00:00

from __future__ import annotations

from enum import StrEnum
from typing import List, Optional

from infrasys import Component
from pydantic import Field


class Fuel(StrEnum):
    CO = "CO"
    BT = "BT"
    HY = "HY"


class SupplyTechnology(Component):
    name: str = Field(..., description="The technology name")
    available: bool = Field(
        ..., description="identifies whether the technology is available"
    )
    power_systems_type: str = Field(
        ..., description="maps to a valid PowerSystems.jl for PCM modeling"
    )
    fuel: Fuel = Field(..., description="Fuel type according to IEA")


class StorageTech(StrEnum):
    LI = "LI"
    SI = "SI"
    OT = "OT"


class StorageTechnology(Component):
    name: str = Field(..., description="The technology name")
    available: bool = Field(
        ..., description="identifies whether the technology is available"
    )
    power_systems_type: str = Field(
        ..., description="maps to a valid PowerSystems.jl for PCM modeling"
    )
    storage_tech: StorageTech = Field(..., description="Storage Technology Type")


class DemandsideTechnology(Component):
    name: str = Field(..., description="The technology name")
    available: bool = Field(
        ..., description="identifies whether the technology is available"
    )
    power_systems_type: str = Field(
        ..., description="maps to a valid PowerSystems.jl for PCM modeling"
    )


class TransportTechnology(Component):
    name: str = Field(..., description="The technology name")
    available: bool = Field(
        ..., description="identifies whether the technology is available"
    )
    power_systems_type: str = Field(
        ..., description="maps to a valid PowerSystems.jl for PCM modeling"
    )


class DemandRequirement(Component):
    name: str = Field(..., description="The technology name")
    available: bool = Field(
        ..., description="identifies whether the technology is available"
    )
    power_systems_type: str = Field(
        ..., description="maps to a valid PowerSystems.jl for PCM modeling"
    )


class PorfolioData(Component):
    supply_technologies: Optional[List[SupplyTechnology]] = None
    storage_technologies: Optional[List[StorageTechnology]] = None
    demandside_technologies: Optional[List[DemandsideTechnology]] = None
    transport_technologies: Optional[List[TransportTechnology]] = None
    demand_requirements: Optional[List[DemandRequirement]] = None
